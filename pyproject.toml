[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "prsm"
version = "0.1.0"
description = "Protocol for Recursive Scientific Modeling - A decentralized AI framework for scientific discovery"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "PRSM Team", email = "team@prsm.org"}
]
maintainers = [
    {name = "PRSM Team", email = "team@prsm.org"}
]
keywords = ["ai", "science", "research", "distributed", "blockchain", "ipfs"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Information Analysis",
]
requires-python = ">=3.11"
dependencies = [
    # Core Framework
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    
    # Async & Concurrency
    "asyncio-mqtt>=0.16.0",
    "aiofiles>=23.2.1",
    "aiohttp>=3.9.0",
    
    # Database & Storage
    "sqlalchemy>=2.0.0",
    "alembic>=1.13.0",
    "redis>=5.0.0",
    "psycopg2-binary>=2.9.0",
    
    # IPFS & Distributed Storage
    "ipfshttpclient>=0.8.0a2",
    "py-multiaddr>=0.0.3",
    "py-multicodec>=0.2.1",
    
    # AI & ML
    "openai>=1.6.0",
    "anthropic>=0.8.0",
    "transformers>=4.36.0",
    "torch>=2.1.0",
    "numpy>=1.24.0",
    "scikit-learn>=1.3.0",
    
    # Vector Database
    "pinecone-client>=2.2.4",
    "weaviate-client>=3.25.0",
    "chromadb>=0.4.0",
    
    # Cryptography & Security
    "cryptography>=41.0.0",
    "pyjwt>=2.8.0",
    "bcrypt>=4.1.0",
    
    # P2P Networking (optional for basic functionality)
    # "libp2p>=0.2.0",
    # "py-libp2p>=0.2.0",
    
    # Monitoring & Logging
    "prometheus-client>=0.19.0",
    "structlog>=23.2.0",
    "rich>=13.7.0",
    
    # Utilities
    "click>=8.1.0",
    "python-dotenv>=1.0.0",
    "httpx>=0.25.0",
    "tenacity>=8.2.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.12.0",
    "pytest-cov>=4.1.0",
    "black>=23.12.0",
    "isort>=5.13.0",
    "flake8>=6.1.0",
    "mypy>=1.8.0",
    "pre-commit>=3.6.0",
    "docker>=6.1.0",
    "requests>=2.31.0",
]
test = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.12.0",
    "pytest-cov>=4.1.0",
    "factory-boy>=3.3.0",
    "faker>=20.1.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.4.0",
    "mkdocstrings[python]>=0.24.0",
]

[project.urls]
Homepage = "https://github.com/prsm-org/prsm"
Documentation = "https://docs.prsm.org"
Repository = "https://github.com/prsm-org/prsm"
Issues = "https://github.com/prsm-org/prsm/issues"
Changelog = "https://github.com/prsm-org/prsm/blob/main/CHANGELOG.md"

[project.scripts]
prsm = "prsm.cli:main"
prsm-dev = "prsm.dev_cli:main"
prsm-node = "prsm.node:main"
prsm-teacher = "prsm.teachers.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["prsm*"]
exclude = ["tests*"]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["prsm"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
strict_concatenate = true

# Import discovery
mypy_path = [".", "stubs"]
namespace_packages = true
explicit_package_bases = true

# Error output
show_error_codes = true
show_column_numbers = true
show_error_context = true
pretty = true
color_output = true
error_summary = true

# Performance
cache_dir = ".mypy_cache"
sqlite_cache = true
skip_version_check = true

# Modules with relaxed checking (gradually increase strictness)
[[tool.mypy.overrides]]
module = [
    "prsm.nwtn.meta_reasoning_engine",
    "prsm.api.*",
    "prsm.chronos.*"
]
# Start with basic checking for complex modules
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true

# Third-party modules without type stubs
[[tool.mypy.overrides]]
module = [
    "ipfshttpclient.*",
    "pinecone.*",
    "weaviate.*",
    "libp2p.*",
    "structlog.*",
    "psutil.*",
    "cachetools.*",
    "aioredis.*",
    "uvicorn.*",
    "redis.*",
    "numpy.*",
    "scipy.*",
    "pandas.*",
    "matplotlib.*",
    "plotly.*",
    "pytest.*",
    "anthropic.*",
    "openai.*",
    "transformers.*"
]
ignore_missing_imports = true

# Core modules with strict type checking
[[tool.mypy.overrides]]
module = [
    "prsm.core.validation.*",
    "prsm.core.errors.*",
    "prsm.core.config.*"
]
# Strict checking for new infrastructure
disallow_untyped_defs = true
disallow_incomplete_defs = true  
disallow_any_generics = true
disallow_any_unimported = true
disallow_subclassing_any = true
warn_return_any = true

# Test modules
[[tool.mypy.overrides]]
module = ["tests.*"]
disallow_untyped_defs = false
disallow_incomplete_defs = false
ignore_errors = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=prsm",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "e2e: marks tests as end-to-end tests",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["prsm"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__init__.py",
    "*/migrations/*",
]

[tool.coverage.report]
# Minimum coverage threshold for production readiness
fail_under = 50
precision = 2
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ .__main__.:",
    "class .*\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"
title = "PRSM Test Coverage Report"

[tool.coverage.xml]
output = "coverage.xml"

# Component-specific coverage requirements
# Critical Security Components: 80% minimum
# Core Framework: 60% minimum  
# Supporting Systems: 40% minimum
[tool.coverage.paths]
source = [
    "prsm/",
    "*/site-packages/prsm/",
]