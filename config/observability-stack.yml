# PRSM Enhanced Observability Stack Configuration
# Comprehensive monitoring, logging, and tracing for Phase 1 validation

# ===================================
# Service Discovery & Endpoints
# ===================================
services:
  prometheus:
    url: "http://prometheus:9090"
    scrape_interval: "15s"
    evaluation_interval: "15s"
    
  jaeger:
    url: "http://jaeger:14268"
    collector_endpoint: "http://jaeger:14268/api/traces"
    query_endpoint: "http://jaeger:16686"
    
  grafana:
    url: "http://grafana:3000"
    admin_user: "admin"
    admin_password: "${GRAFANA_PASSWORD}"
    
  loki:
    url: "http://loki:3100"
    push_endpoint: "/loki/api/v1/push"
    query_endpoint: "/loki/api/v1/query"
    
  elasticsearch:
    url: "http://elasticsearch:9200"
    index_prefix: "prsm-logs"
    
  tempo:
    url: "http://tempo:3200"
    distributor_endpoint: ":14268"
    query_frontend_endpoint: ":3200"

# ===================================
# PRSM-Specific Metrics Configuration
# ===================================
prsm_metrics:
  # Core system metrics
  system:
    - name: "prsm_query_processing_duration_seconds"
      type: "histogram"
      description: "Time taken to process user queries through NWTN orchestrator"
      buckets: [0.1, 0.5, 1.0, 2.0, 5.0, 10.0]
      labels: ["query_type", "user_tier", "complexity"]
      
    - name: "prsm_concurrent_sessions_total"
      type: "gauge"
      description: "Number of active user sessions"
      labels: ["session_type", "region"]
      
    - name: "prsm_agent_pipeline_execution_seconds"
      type: "histogram"
      description: "End-to-end agent pipeline execution time"
      buckets: [0.05, 0.1, 0.25, 0.5, 1.0, 2.0]
      labels: ["pipeline_stage", "agent_type"]

  # FTNS token metrics
  tokenomics:
    - name: "ftns_transactions_per_second"
      type: "gauge"
      description: "Rate of FTNS token transactions"
      labels: ["transaction_type", "user_tier"]
      
    - name: "ftns_balance_distribution"
      type: "histogram"
      description: "Distribution of FTNS balances across users"
      buckets: [10, 100, 1000, 10000, 100000]
      
    - name: "ftns_cost_calculation_duration_seconds"
      type: "histogram"
      description: "Time to calculate FTNS costs with microsecond precision"
      buckets: [0.0001, 0.001, 0.01, 0.1, 1.0]
      labels: ["calculation_type"]

  # Agent framework metrics
  agents:
    - name: "agent_task_queue_depth"
      type: "gauge"
      description: "Number of tasks waiting in agent queues"
      labels: ["agent_type", "priority"]
      
    - name: "agent_model_selection_duration_seconds"
      type: "histogram"
      description: "Time for router agents to select optimal models"
      buckets: [0.01, 0.05, 0.1, 0.25, 0.5]
      
    - name: "agent_compilation_success_rate"
      type: "gauge"
      description: "Success rate of compiler agents aggregating results"
      labels: ["compilation_type"]

  # P2P federation metrics
  federation:
    - name: "p2p_active_connections"
      type: "gauge"
      description: "Number of active P2P connections"
      labels: ["connection_type", "region"]
      
    - name: "p2p_consensus_latency_seconds"
      type: "histogram"
      description: "Time to reach consensus in P2P network"
      buckets: [0.1, 0.5, 1.0, 2.0, 5.0]
      
    - name: "model_registry_sync_duration_seconds"
      type: "histogram"
      description: "Time to synchronize model registry across network"
      buckets: [1.0, 5.0, 10.0, 30.0, 60.0]

  # Safety and security metrics
  safety:
    - name: "circuit_breaker_activations_total"
      type: "counter"
      description: "Number of circuit breaker activations"
      labels: ["threat_level", "component"]
      
    - name: "safety_validation_duration_seconds"
      type: "histogram"
      description: "Time to validate safety constraints"
      buckets: [0.001, 0.01, 0.1, 0.5, 1.0]
      
    - name: "security_threat_score"
      type: "gauge"
      description: "Current security threat assessment score"
      labels: ["threat_type"]

# ===================================
# Performance SLIs (Service Level Indicators)
# ===================================
slis:
  # Phase 1 target: 1000 concurrent requests with <2s latency
  api_performance:
    - name: "api_request_latency_p95"
      query: 'histogram_quantile(0.95, rate(prsm_query_processing_duration_seconds_bucket[5m]))'
      target: 2.0
      critical_threshold: 3.0
      
    - name: "api_throughput_rps"
      query: 'rate(http_requests_total{job="prsm-api"}[5m])'
      target: 100.0
      critical_threshold: 50.0
      
    - name: "api_error_rate"
      query: 'rate(http_requests_total{job="prsm-api",status=~"5.."}[5m]) / rate(http_requests_total{job="prsm-api"}[5m])'
      target: 0.01
      critical_threshold: 0.05
      
    - name: "concurrent_sessions"
      query: 'prsm_concurrent_sessions_total'
      target: 1000
      critical_threshold: 1500

  # FTNS performance targets
  tokenomics_performance:
    - name: "ftns_cost_calculation_latency_p99"
      query: 'histogram_quantile(0.99, rate(ftns_cost_calculation_duration_seconds_bucket[5m]))'
      target: 0.001  # 1ms for microsecond precision
      critical_threshold: 0.01
      
    - name: "ftns_transaction_success_rate"
      query: '1 - (rate(ftns_transfer_failures_total[5m]) / rate(ftns_transactions_total[5m]))'
      target: 0.999
      critical_threshold: 0.99

  # Infrastructure performance
  infrastructure_performance:
    - name: "cpu_utilization_p95"
      query: '100 - (avg(irate(node_cpu_seconds_total{mode="idle"}[5m])) * 100)'
      target: 70.0
      critical_threshold: 90.0
      
    - name: "memory_utilization"
      query: '(1 - (node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes)) * 100'
      target: 80.0
      critical_threshold: 95.0

# ===================================
# Distributed Tracing Configuration
# ===================================
tracing:
  enabled: true
  service_name: "prsm-system"
  
  # Trace sampling rates
  sampling:
    default_rate: 0.1  # 10% sampling for normal operations
    high_priority_rate: 1.0  # 100% sampling for critical operations
    error_rate: 1.0  # 100% sampling for errors
    
  # Span configurations for PRSM components
  spans:
    nwtn_orchestrator:
      operation_name: "nwtn.process_query"
      tags: ["user_id", "query_complexity", "context_allocation"]
      
    agent_pipeline:
      operation_name: "agent.pipeline_execution"
      tags: ["pipeline_stage", "agent_type", "model_id"]
      
    ftns_operations:
      operation_name: "ftns.transaction"
      tags: ["transaction_type", "amount", "user_tier"]
      
    ipfs_operations:
      operation_name: "ipfs.content_operation"
      tags: ["operation_type", "content_hash", "size_bytes"]

# ===================================
# Log Aggregation Configuration
# ===================================
logging:
  # Structured logging format
  format: "json"
  level: "INFO"
  
  # Log streams
  streams:
    application:
      retention: "30d"
      labels: ["service", "environment", "level"]
      
    security:
      retention: "90d"
      labels: ["event_type", "severity", "source_ip"]
      
    audit:
      retention: "1y"
      labels: ["action", "user_id", "resource"]
      
    performance:
      retention: "7d"
      labels: ["metric_type", "component"]

  # Log parsing rules
  parsing_rules:
    - regex: '(?P<timestamp>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{3}Z) (?P<level>\w+) (?P<message>.*)'
      labels: ["timestamp", "level", "message"]
      
    - regex: 'FTNS_TRANSACTION: user=(?P<user_id>\w+) amount=(?P<amount>\d+\.?\d*) type=(?P<type>\w+)'
      labels: ["user_id", "amount", "type"]

# ===================================
# Alerting Configuration
# ===================================
alerting:
  # Alert routing
  routes:
    critical:
      receiver: "pagerduty-critical"
      group_wait: "10s"
      group_interval: "5m"
      repeat_interval: "15m"
      
    warning:
      receiver: "slack-warnings"
      group_wait: "30s"
      group_interval: "10m"
      repeat_interval: "1h"
      
    info:
      receiver: "email-notifications"
      group_wait: "1m"
      group_interval: "30m"
      repeat_interval: "6h"

  # Notification channels
  receivers:
    pagerduty-critical:
      pagerduty_configs:
        - routing_key: "${PAGERDUTY_INTEGRATION_KEY}"
          description: "PRSM Critical Alert: {{ .GroupLabels.alertname }}"
          
    slack-warnings:
      slack_configs:
        - api_url: "${SLACK_WEBHOOK_URL}"
          channel: "#prsm-alerts"
          title: "PRSM Warning: {{ .GroupLabels.alertname }}"
          
    email-notifications:
      email_configs:
        - to: "team@prsm.org"
          subject: "PRSM Alert: {{ .GroupLabels.alertname }}"

# ===================================
# Dashboard Configuration
# ===================================
dashboards:
  phase1_validation:
    title: "PRSM Phase 1 Validation Dashboard"
    panels:
      - title: "Request Latency (Target: <2s)"
        type: "graph"
        query: 'histogram_quantile(0.95, rate(prsm_query_processing_duration_seconds_bucket[5m]))'
        threshold: 2.0
        
      - title: "Concurrent Sessions (Target: 1000)"
        type: "stat"
        query: 'prsm_concurrent_sessions_total'
        threshold: 1000
        
      - title: "FTNS Cost Calculation Performance"
        type: "graph"
        query: 'histogram_quantile(0.99, rate(ftns_cost_calculation_duration_seconds_bucket[5m]))'
        threshold: 0.001
        
      - title: "Agent Pipeline Success Rate"
        type: "stat"
        query: 'rate(agent_pipeline_success_total[5m]) / rate(agent_pipeline_attempts_total[5m])'
        threshold: 0.95

  system_health:
    title: "PRSM System Health Overview"
    panels:
      - title: "Service Availability"
        type: "stat"
        query: 'up{job=~"prsm-.*"}'
        
      - title: "Error Rates by Service"
        type: "graph"
        query: 'rate(http_requests_total{status=~"5.."}[5m]) by (service)'
        
      - title: "Resource Utilization"
        type: "heatmap"
        query: 'node_cpu_seconds_total'

# ===================================
# Performance Testing Integration
# ===================================
performance_testing:
  load_test_metrics:
    - name: "load_test_requests_per_second"
      description: "Current load test RPS"
      
    - name: "load_test_response_time_p95"
      description: "95th percentile response time during load test"
      
    - name: "load_test_concurrent_users"
      description: "Number of concurrent users in load test"
      
    - name: "load_test_error_rate"
      description: "Error rate during load testing"

  # Automated performance validation
  validation_rules:
    - name: "phase1_latency_requirement"
      description: "API latency must be <2s under 1000 concurrent users"
      condition: "prsm_query_processing_duration_seconds_p95 < 2.0 AND prsm_concurrent_sessions_total >= 1000"
      
    - name: "ftns_precision_requirement"
      description: "FTNS cost calculation must complete in <1ms"
      condition: "ftns_cost_calculation_duration_seconds_p99 < 0.001"