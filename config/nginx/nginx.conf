# PRSM Nginx Configuration
# High-performance reverse proxy and load balancer

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# ===================================
# Events Configuration
# ===================================
events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

# ===================================
# HTTP Configuration
# ===================================
http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # ===================================
    # Logging Configuration
    # ===================================
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                   '$status $body_bytes_sent "$http_referer" '
                   '"$http_user_agent" "$http_x_forwarded_for" '
                   '$request_time $upstream_response_time';
    
    access_log /var/log/nginx/access.log main;

    # ===================================
    # Performance Optimization
    # ===================================
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    # Compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css application/json application/javascript 
               text/xml application/xml application/xml+rss text/javascript;

    # ===================================
    # Security Headers
    # ===================================
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # ===================================
    # Rate Limiting
    # ===================================
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;

    # ===================================
    # Upstream Servers
    # ===================================
    upstream prsm_api {
        least_conn;
        server prsm-api:8000 max_fails=3 fail_timeout=30s;
        # Add more API instances for horizontal scaling:
        # server prsm-api-2:8000 max_fails=3 fail_timeout=30s;
        # server prsm-api-3:8000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream grafana {
        server grafana:3000;
    }

    upstream prometheus {
        server prometheus:9090;
    }

    # ===================================
    # Main Server Configuration
    # ===================================
    server {
        listen 80;
        server_name api.prsm.local prsm.local;
        
        # Redirect HTTP to HTTPS in production
        # return 301 https://$server_name$request_uri;

        # ===================================
        # PRSM API Proxy
        # ===================================
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://prsm_api/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # ===================================
        # WebSocket Support
        # ===================================
        location /ws/ {
            proxy_pass http://prsm_api/ws/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # ===================================
        # Health Checks
        # ===================================
        location /health {
            proxy_pass http://prsm_api/health;
            access_log off;
        }

        # ===================================
        # Static Files
        # ===================================
        location /static/ {
            alias /usr/share/nginx/html/static/;
            expires 1d;
            add_header Cache-Control "public, immutable";
        }

        # ===================================
        # IPFS Gateway Proxy
        # ===================================
        location /ipfs/ {
            proxy_pass http://ipfs:8080/ipfs/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }

    # ===================================
    # Monitoring Dashboard
    # ===================================
    server {
        listen 80;
        server_name monitoring.prsm.local;

        location / {
            proxy_pass http://grafana/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /prometheus/ {
            proxy_pass http://prometheus/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }

    # ===================================
    # Default Server (Catch-all)
    # ===================================
    server {
        listen 80 default_server;
        server_name _;
        return 444;  # Close connection without response
    }
}