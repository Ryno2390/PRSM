version: '3.8'

# Development Docker Compose for PRSM Vector Store
# Focused setup for vector database development and testing

services:
  # PostgreSQL with pgvector extension
  postgres-vector:
    image: pgvector/pgvector:pg16
    container_name: prsm_postgres_vector
    environment:
      POSTGRES_DB: prsm_vector_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5433:5432"  # Different port to avoid conflicts
    volumes:
      - postgres_vector_data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d prsm_vector_dev"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    command: >
      postgres
      -c max_connections=100
      -c shared_buffers=128MB
      -c effective_cache_size=512MB
      -c work_mem=4MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=16MB
      -c random_page_cost=1.1
      -c effective_io_concurrency=200

  # Optional: pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: prsm_pgadmin_vector
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@prsm.ai
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8081:80"  # Different port to avoid conflicts
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      postgres-vector:
        condition: service_healthy
    restart: unless-stopped
    profiles:
      - admin

volumes:
  postgres_vector_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  default:
    name: prsm_vector_network